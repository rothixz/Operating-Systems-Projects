/**
 *  \file monGameOfRopeDS.h (interface file)
 *
 *  \brief Problem name: Game of the rope.
 *
 *  \brief Concept: Pedro Mariano
 *
 *  Synchronization based on monitors.
 *  Both threads and the monitor are implemented using the pthread library which enables the creation of a
 *  monitor of the Lampson / Redell type.
 *
 *  Monitor internal data structure is made visible so that the students can develop and test separately the operations
 *  carried out by the referee, the coaches and the contestants.
 *
 *  Definition of monitor internal data structure.
 *
 *  \author Ant√≥nio Rui Borges - November 2015
 */

#ifndef MONGAMEOFROPEDS_H_
#define MONGAMEOFROPEDS_H_

#include <stdbool.h>
#include <pthread.h>

#include "probConst.h"
#include "probDataStruct.h"

/** \brief full state of the problem */
extern FULL_STAT fSt;
/** \brief referee proceed sync point */
extern pthread_cond_t proceed;
/** \brief coaches waiting for notice sync point array (one per coach) */
extern pthread_cond_t waitForNotice[C];
/** \brief contestants waiting for command sync point array (one per contestant) */
extern pthread_cond_t waitForCommand[C][N];
/** \brief number of inform requests generated by the coaches */
extern unsigned int nCoaches;
/** \brief number of inform requests generated by the contestants after a pulling effort on the rope */
extern unsigned int nContestants;
/** \brief flags signalling the intention of the referee to command team assembly */
extern bool chooseTeam[C];
/** \brief number of contestants in position */
extern unsigned int nContInPosition[C];
/** \brief flags signalling the intention of the referee to inform about the trial outcome */
extern bool trialDecision[C];
/** \brief flags signalling the intention of the coach to select a contestant to next trial */
extern bool joinTheTeam[C][N];
/** \brief flags signalling the intention of the referee to inform the contestants it is time to start the trial */
extern bool startPulling[C][N];
/** \brief flags signalling the intention of the referee to inform the contestants it is time to return to the bench */
extern bool returnToBench[C][N];
/** \brief locking flag which warrants mutual exclusion inside the monitor */
extern pthread_mutex_t accessCR;
/** \brief flag which warrants internal data is initialized exactly once */
extern pthread_once_t init;

/**
 *  \brief Internal monitor operation.
 *
 *  Initialization of the internal data structure that contains the shared information and of the logging file.
 */
extern void initialization (void);

#endif /* MONGAMEOFROPEDS_H_ */
